{"version":3,"sources":["./src/app/common/project.service.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/components/intro/intro.component.ts","./src/app/components/intro/intro.component.html","./src/environments/environment.ts","./src/app/components/languages-tools/languages-tools.component.html","./src/app/components/languages-tools/languages-tools.component.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/tools.service.ts","./src/app/components/projets/projets.component.html","./src/app/components/projets/projets.component.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/icons/icons.module.ts","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Project } from './project';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private http: HttpClient) {}\n\n  getProjectList(): Observable<Project[]> {\n    // Get du fichier json contenant les projets\n    const obs: Observable<any> = this.http.get('assets/projects.json');\n    // On GET tout\n    const data = (data) => {\n      // on return la reponse en tant que tableau de Projet\n      return data as Project[];\n    };\n    // return data en observable\n    return obs.pipe(map(data));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-intro></app-intro>\n<app-languages-tools></app-languages-tools>\n<app-projets></app-projets>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-intro',\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.scss'],\n})\nexport class IntroComponent implements OnInit {\n  // string de la photo bind dans l'HTML\n  public introPhoto: string = 'assets/img/photo.png';\n  // string du cv bind dans l'HTML\n  public monCv: string = '../../portfolio/assets/dias_maxime_cv.pdf';\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n","<main id=\"intro\">\n\n    <!-- SECTION PHOTO + LIENS -->\n    <section class=\"content\">\n        <section class=\"name-infos\">\n            <img class=\"intro-photo\" [src]=\"introPhoto\" alt=\"Ma photo\">\n            <div class=\"name\">Maxime Dias</div>\n            <div class=\"title accent\">Junior Web Developer</div>\n            <div class=\"links\">\n                <a href=\"https://github.com/RangoDisco\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i-feather name=\"github\" class=\"icon\"></i-feather>\n                </a>\n                <a href=\"https://linkedin.com/in/maxime-dias\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i-feather name=\"linkedin\" class=\"icon\"></i-feather>\n                </a>\n                <a [href]=\"monCv\" target=\"_blank\">\n                    <i-feather name=\"download\" class=\"icon\"></i-feather>\n\n                </a>\n\n            </div>\n        </section>\n\n        <!-- SECTION ABOUT -->\n        <section class=\"about\">\n            <h2 class=\"accent\">About me :</h2>\n            <p>Hi ! My name is <span class=\"bold accent\"> Maxime</span>, a junior Web Developer currently studying at\n                the\n                WildCodeSchool in Lyon.</p>\n\n            <p>Right now, I'm learning <span class=\"bold accent\">Angular</span> and <span class=\"bold accent\">\n                    Spring</span> but I'm planning on learning more languages & technologies such as React and NodeJS.\n            </p>\n\n            <p> I also fell in love with <span class=\"accent\">Open Source</span> developement and I'm trying my best to\n                help the community ! </p>\n        </section>\n    </section>\n\n    <!-- BUTTON POUR DESCENDRE -->\n    <div class=\"projects-button\">\n        <a class=\"button nav-link\" aria-current=\"page\" href=\"#tools\">\n            <i-feather name=\"chevron-down\" class=\" btn-down icon\"></i-feather>\n        </a>\n    </div>\n</main>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<main id=\"tools\">\n    <section class=\"tools\">\n        <div class=\"tools-title\">\n            <h2 class=\"title\">Tools: </h2>\n        </div>\n\n        <!-- Boucle sur la liste des outils pour les afficher un à un -->\n        <div class=\"tool\" *ngFor=\"let tool of toolsList\">\n            <div class=\"tool-icon\">\n                <img class=\"tools-icon\" [src]=\"tool.icon\" alt=\"icon of {{tool.name}}\">\n            </div>\n        </div>\n    </section>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Tool } from '../../common/tool';\nimport { ToolsService } from '../../common/tools.service';\n\n@Component({\n  selector: 'app-languages-tools',\n  templateUrl: './languages-tools.component.html',\n  styleUrls: ['./languages-tools.component.scss'],\n})\nexport class LanguagesToolsComponent implements OnInit {\n  // Tableau qui va servir à stocker les outils\n  public toolsList: Tool[];\n  constructor(private service: ToolsService) {}\n\n  ngOnInit(): void {\n    // Appel de la fonction du service qui vient chercher tous les outils\n    this.service.getToolsList().subscribe((data) => {\n      // Push des outils dans le tableau\n      this.toolsList = data;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  // Get year for auto update in footer\n  public year = new Date();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<main>\n    <div class=\"content\"> Absolutely no copyright at all {{year | date: 'yyyy'}} - <a class=\"source-code\"\n            href=\"https://github.com/RangoDisco/portfolio\" target=\"_blank\">Source code</a></div>\n</main>","import { ViewportScroller } from '@angular/common';\nimport { Component, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'cv';\n\n  pageYoffset = 0;\n\n  constructor(private scroll: ViewportScroller) {}\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { IntroComponent } from './components/intro/intro.component';\nimport { ProjetsComponent } from './components/projets/projets.component';\nimport { IconsModule } from './icons/icons.module';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { LanguagesToolsComponent } from './components/languages-tools/languages-tools.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    IntroComponent,\n    ProjetsComponent,\n    NotFoundComponent,\n    LanguagesToolsComponent,\n    HomeComponent,\n    FooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    IconsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Tool } from './tool';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToolsService {\n  constructor(private http: HttpClient) {}\n\n  getToolsList(): Observable<Tool[]> {\n    // Get du fichier json contenant les outils\n    const obs: Observable<any> = this.http.get('assets/tools.json');\n    // On GET tout\n    const data = (data) => {\n      // on return la reponse en tant que tableau de Tool\n      return data as Tool[];\n    };\n    // return data en observable\n    return obs.pipe(map(data));\n  }\n}\n","<main id=\"projects\">\n    <div class=\"title\">\n        <h2>Projects:</h2>\n    </div>\n\n    <section class=\"project-list\">\n\n        <!-- Boucle sur le tableau de projets pour les afficher un à un  -->\n        <article class=\"project\" *ngFor=\"let project of projectList\">\n            <a [href]=\"project.link\" target=\"_blank\">\n                <div class=\"img\"><img [src]=\"project.img\" alt=\"img of {{project.name}}\"></div>\n                <div class=\"name\">{{project.name}}</div>\n                <div class=\"date\">{{project.date}}</div>\n                <hr class=\"projet-hr\">\n                <div class=\"desc\">\n                    <p>{{project.desc1}}</p>\n                    <p>{{project.desc2}}</p>\n                </div>\n            </a>\n        </article>\n    </section>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../../common/project';\nimport { ProjectService } from '../../common/project.service';\n\n@Component({\n  selector: 'app-projets',\n  templateUrl: './projets.component.html',\n  styleUrls: ['./projets.component.scss'],\n})\nexport class ProjetsComponent implements OnInit {\n  // Tableau qui va contenir la liste de projets\n  public projectList: Project[];\n\n  constructor(private projectService: ProjectService) {}\n\n  ngOnInit(): void {\n    // Appel de la fonction du service pour GET la liste de projet\n    this.projectService.getProjectList().subscribe((data) => {\n      // Push de chaque projet dans le tableau\n      this.projectList = data;\n    });\n  }\n}\n","import { ViewportScroller } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private scroll: ViewportScroller) { }\n\n  ngOnInit(): void {\n\n  }\n  scrollToTop() {\n    this.scroll.scrollToPosition([0, 0]);\n  }\n}\n","<nav class=\"navbar sticky-top navbar-expand-lg navbar-dark\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#intro\"> Home</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" aria-current=\"page\" href=\"#tools\">Tools</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" aria-current=\"page\" href=\"#projects\">Projects</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FeatherModule } from 'angular-feather';\n// Import des icones utilisés\nimport {\n  Linkedin,\n  Github,\n  ArrowUp,\n  AlertCircle,\n  Download,\n  ChevronDown,\n} from 'angular-feather/icons';\n\n// Creation du tableau des icones choisis\nconst icons = {\n  Linkedin,\n  Github,\n  ArrowUp,\n  AlertCircle,\n  Download,\n  ChevronDown,\n};\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, FeatherModule.pick(icons)],\n  exports: [FeatherModule],\n})\nexport class IconsModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<main>\n    <div class=\"error-icon\">\n        <i-feather name=\"alert-circle\" class=\"icon\"></i-feather>\n    </div>\n    <hr class=\"hr-error\" />\n    <div class=\"desc\">\n        <p>This page does not exist.</p>\n    </div>\n    <div>\n        <button class=\"back\" [routerLink]=\"['/']\">\n            Back to home page\n        </button>\n    </div>\n</main>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      anchorScrolling: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}